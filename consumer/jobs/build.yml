parameters:
  - name: containerRegistryUrl
    type: string
  - name: containerRegistryServiceConnection
    type: string
  - name: packageName
    type: string
  - name: ddlFileName
    type: string

jobs:
  - job: build_and_push
    displayName: Build & Push Docker image to registry
    variables:
      - name: buildDate
        value: $[format('{0:yyyy}.{0:MM}.{0:dd}', pipeline.startTime)]
      - name: buildRevision
        value: $[counter(variables['buildDate'], 1)]
      - name: buildNumber
        value: $(buildDate).$(buildRevision)
      - name: buildRepositoryName
        value: $[split(variables['Build.Repository.Name'], '/')[1]]
    steps:
      - checkout: self
        persistCredentials: true

      - checkout: platform

      - task: Docker@2
        displayName: Login to ACR
        inputs:
          command: login
          containerRegistry: ${{ parameters.containerRegistryServiceConnection }}

      - bash: |
          echo $(Build.Repository.Name)
          echo ${{ split(variables['Build.Repository.Name'], '/')[0] }}
          echo ${{ split(variables['Build.Repository.Name'], '/')[1] }}
        workingDirectory: $(Build.SourcesDirectory)/$(buildRepositoryName)

      - bash: $(Build.SourcesDirectory)/example-platform-dotnet-pipeline/consumer/steps/build_consumer_application.sh ${{ parameters.containerRegistryUrl }} $(pwd) ${{ parameters.packageName }} $(buildNumber)
        workingDirectory: $(Build.SourcesDirectory)/$(buildRepositoryName)
        displayName: Build an application

      - bash: $(Build.SourcesDirectory)/example-platform-dotnet-pipeline/consumer/steps/build_docker_consumer_image.sh ${{ parameters.containerRegistryUrl }} $(buildRepositoryName) ${{ parameters.packageName }} $(pwd) $(buildNumber)
        workingDirectory: $(Build.SourcesDirectory)/$(buildRepositoryName)
        displayName: Build Docker image
