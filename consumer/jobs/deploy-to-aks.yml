parameters:
  - name: containerRegistryUrl
    type: string
  - name: containerRegistryServiceConnection
    type: string
  - name: kubernetesNamespace
    type: string
  - name: buildNumber
    type: string
  - name: workingDirectory
    type: string
  - name: region
    type: string

jobs:
  - deployment: ${{ format('deploy_aks_{0}', lower(parameters.region)) }}
    displayName: ${{ format('Deploy AKS to {0}', upper(parameters.region)) }}
    variables:
      - name: deploymentEnvironment
        value: ${{ format('exampleplatformaks{0}', lower(parameters.region)) }}
      - name: terraformVersion
        value: '1.3.0'
      - name: azureSubscriptionServiceConnectionName
        value: example-platform-azure-kubernetes
    environment: ${{ variables.deploymentEnvironment }}
    timeoutInMinutes: 5
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
              persistCredentials: true

            - checkout: platform

            - task: Docker@2
              displayName: Login to ACR
              inputs:
                command: login
                containerRegistry: ${{ parameters.containerRegistryServiceConnection }}

            - task: Kubernetes@1
              displayName: kubectl login
              inputs:
                command: login

            - bash: |
                echo ${KUBECONFIG}
                chmod 600 ${KUBECONFIG}
              displayName: Reduce kube config permissions

            - task: qetza.replacetokens.replacetokens-task.replacetokens@5
              displayName: Insert pipeline variables into values.yaml
              inputs:
                rootDirectory: $(Build.SourcesDirectory)/example-platform-dotnet-pipeline
                targetFiles: |
                  **/consumer/helm/application/values.yaml
                escapeType: none
                enableTransforms: true

            - bash: |
                $(Build.SourcesDirectory)/example-platform-dotnet-pipeline/consumer/steps/deploy_to_aks.sh \
                  $(containerRegistryUrl) \
                  ${{ parameters.kubernetesNamespace }} \
                  $(buildRepositoryName) \
                  ${{ parameters.buildNumber }} \
                  '/${{ parameters.kubernetesNamespace }}/$(buildRepositoryName)/*' \
                  $(Build.SourcesDirectory)/$(buildRepositoryName)/pipeline/aks/values.yaml \
                  $(Build.SourcesDirectory)/example-platform-dotnet-pipeline/consumer/helm/chart/example-platform-application \

              displayName: Deploy to AKS

            - task: Kubernetes@1
              displayName: kubectl logout
              inputs:
                command: logout
