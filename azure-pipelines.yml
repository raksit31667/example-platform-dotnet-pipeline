trigger:
  - main

pool:
  vmImage: ubuntu-20.04

variables:
  - name: containerRegistryUrl
    value: exampleplatformacr.azurecr.io
  - name: containerRegistryServiceConnection
    value: exampleplatformacr

stages:
  - stage: lint_and_test
    displayName: Lint and test
    jobs:
      - job: lint
        displayName: Lint
        steps:
          - bash: ./platform/steps/shell_linting.sh $(pwd)/platform
            displayName: Lint platform Shell scripts

          - bash: ./platform/steps/shell_linting.sh $(pwd)/consumer
            displayName: Lint consumer Shell scripts

          - bash: ./platform/steps/dockerfile_linting.sh $(pwd)/docker
            displayName: Lint Dockerfile

      - job: unit_test
        displayName: Unit test
        dependsOn: lint
        steps:
          - task: UsePythonVersion@0
            displayName: Use Python 3.9
            inputs:
              versionSpec: 3.9

          - bash: |
              python -m pip install --upgrade pip
              pip install pipenv
            displayName: Install pipenv

          - bash: pipenv install
            displayName: Install dependencies

          - bash: pipenv run pytest
            displayName: Run unit tests

  - stage: build_and_push_docker_base_images
    displayName: Build and Push Docker base images
    jobs:
      - job: build_and_push
        displayName: Build and Push
        steps:
          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: $(containerRegistryServiceConnection)

          - bash: ./platform/steps/build_docker_base_images.sh $(containerRegistryUrl)
            displayName: Build Docker base images

          - bash: ./platform/steps/push_docker_base_images.sh $(containerRegistryUrl)
            displayName: Push Docker base images
